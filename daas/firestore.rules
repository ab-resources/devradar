service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{user} {
     	allow get: if true;
      allow list: if hasRole('admin');
      allow write: if request.auth.uid == user || hasRole('admin');
    }

    match /roles/{user} {
      allow get: if true;
      allow list: if hasRole('admin');
      allow write: if hasRole('admin');
    }

    match /radars/{radar} {
      allow get: if isReadable(radar);
      allow list: if isReadable(radar);
			allow create: if isSignedIn();
      allow change, delete: if isOwner(radar) || hasRole('admin');
    }
    match /radars/{radar}/blips/{blip} {
      allow get: if isReadable(radar);
      allow list: if isReadable(radar);
      allow write: if true;
    }
    match /radars/{radar}/blips/{blip}/changes/{change} {
      allow get: if isReadable(radar);
      allow list: if isReadable(radar);
      allow write: if isOwner(radar) || hasRole('admin');
    }

    /* helper functions */
    function isSignedIn() {
      return request.auth != null;
    }    
    function getRoles() {
      return get(/databases/$(database)/documents/roles/$(request.auth.uid)).data
    }
    function hasRole(role) {
      return isSignedIn() && getRoles()[role] == true;
    }
    function hasAnyRole(roles) {
      return isSignedIn() && getRoles().keys().hasAny(roles);
    }
    function isPublic(radar) {
      return get(/databases/$(database)/documents/radars/$(radar)).data[isPublic] == true
    }
    function isOwner(radar) {
      return request.auth.uid == get(/databases/$(database)/documents/radars/$(radar)).data.owner
    }
    function isReadable(radar) {
      return isOwner(radar) || isPublic(radar) || request.auth.uid in get(/databases/$(database)/documents/radars/$(radar)).data.readers
    }
  }
}